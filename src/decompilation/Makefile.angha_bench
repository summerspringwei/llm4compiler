# Makefile for recursively compiling C source files
# 

# Compiler and flags
CC := clang
CFLAGS := -g -O2

ROOT_DIR := /home/xiachunwei/Dataset/decompilation-dataset/AnghaBench-Sample

# Directories
SRC_DIR := $(ROOT_DIR)
OBJ_DIR := $(ROOT_DIR)-obj-g-O2
ASS_DIR := $(ROOT_DIR)-assembly-g-O2
LL_DIR := $(ROOT_DIR)-ll-g-O2


# Source files
SRCS := $(shell find $(SRC_DIR) -name '*.c')
OBJS := $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRCS))
ASSEMBLYS := $(patsubst $(SRC_DIR)/%.c,$(ASS_DIR)/%.s,$(SRCS))
LLS := $(patsubst $(SRC_DIR)/%.c,$(LL_DIR)/%.ll,$(SRCS))

# Targets
all: $(ASSEMBLYS)

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)
	# $(CC) $(CFLAGS) -c $< -o $@ -mllvm -print-after-all > $(dir $@)/compile_log.txt
	$(CC) $(CFLAGS) -c $< -o $@


$(ASS_DIR)/%.s: $(OBJ_DIR)/%.o
	@mkdir -p $(dir $@)
	llvm-objdump -d --no-show-raw-insn $< > $@

.PHONY: all
